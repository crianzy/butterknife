subprojects { project ->
  group = GROUP
  version = VERSION_NAME

  repositories {
      maven { url 'http://maven.oschina.net/content/groups/public/' }
      jcenter()
    mavenCentral()
  }

  apply plugin: 'checkstyle'

  task checkstyle(type: Checkstyle) {
    configFile rootProject.file('checkstyle.xml')
    source 'src/main/java'
    ignoreFailures false
    showViolations true
    include '**/*.java'

    classpath = files()
  }

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('checkstyle')
    }
  }

  buildscript {
    repositories {
        maven { url 'http://maven.oschina.net/content/groups/public/' }
        jcenter()
      mavenCentral()
    }
    dependencies {
      classpath 'com.android.tools.build:gradle:1.3.1'
      classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
  }
}

ext {
  minSdkVersion = 15
  targetSdkVersion = 23
  compileSdkVersion = 23
  buildToolsVersion = '23.0.1'
  sourceCompatibilityVersion = JavaVersion.VERSION_1_7
  targetCompatibilityVersion = JavaVersion.VERSION_1_7
}

ext.deps = [
    // Android
        // 这里是由于 我本地 有 4.1.1 的库 所以改成这样 , 就不需要 再去下一遍了
//    android: 'com.google.android:android:2.1.2',
    android: 'com.google.android:android:4.1.1.4',
    supportv4: 'com.android.support:support-v4:23.0.1',
    supportAnnotations: 'com.android.support:support-annotations:23.0.1',

    // Square 这是一个 用于生产.java文件的工具类 apt 的时候用到
    javapoet: 'com.squareup:javapoet:1.4.0',

    // Test dependencies
    junit: 'junit:junit:4.12',
    truth: 'com.google.truth:truth:0.27',
    robolectric: 'org.robolectric:robolectric:2.2',
    compiletesting: 'com.google.testing.compile:compile-testing:0.7',
    autoservice: 'com.google.auto.service:auto-service:1.0-rc2',
    autocommon: 'com.google.auto:auto-common:0.4'
]
